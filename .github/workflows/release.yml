name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        node: ['16']
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node }}

    - name: Install dependencies
      run: npm ci

    - name: Run your script
      env:
        SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
        SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
      run: node main.js

    - name: Install pkg
      run: npm install -g pkg

    - name: Build executable
      run: pkg . --output dist/spotify-playlist-generator-${{ runner.os }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: spotify-playlist-generator-${{ runner.os }}
        path: dist/spotify-playlist-generator-${{ runner.os }}

    - name: Create Release
      if: matrix.os == 'ubuntu-latest'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Download all artifacts
      if: matrix.os == 'ubuntu-latest'
      uses: actions/download-artifact@v2
      with:
        path: dist/

    - name: Upload Release Asset
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/spotify-playlist-generator-${{ runner.os }}
        asset_name: spotify-playlist-generator-${{ runner.os }}
        asset_content_type: application/octet-stream
